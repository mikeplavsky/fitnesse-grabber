openapi: "3.0.1"
info:
  title: "fitnesse-grabber-api"
  version: "2020-06-01T22:33:36Z"
servers:
- url: "https://4w05r72oja.execute-api.us-east-1.amazonaws.com/{basePath}"
  variables:
    basePath:
      default: "/prod"
paths:
  /ecs:
    get:
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::128732327734:role/service-role/fitnesse-grabber-role-bfh1eaui"
        uri: "arn:aws:apigateway:us-east-1:ecs:action/DescribeTasks"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.header.X-Amz-Target: "'AmazonEC2ContainerServiceV20141113.DescribeTasks'"
          integration.request.header.Content-Type: "'application/x-amz-json-1.1'"
        requestTemplates:
          application/json: "{\n\"cluster\": \"arn:aws:ecs:us-east-1:128732327734:cluster/FitnesseFargate\"\
            ,\n\"tasks\": [\"$input.params('taskId')\"]\n}"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        type: "aws"
    options:
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /:
    post:
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::128732327734:role/service-role/fitnesse-grabber-role-bfh1eaui"
        uri: "arn:aws:apigateway:us-east-1:ecs:action/RunTask"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.header.X-Amz-Target: "'AmazonEC2ContainerServiceV20141113.RunTask'"
          integration.request.header.Content-Type: "'application/x-amz-json-1.1'"
        requestTemplates:
          application/json: "{\n   \"capacityProviderStrategy\":[\n      {\n     \
            \    \"capacityProvider\":\"FARGATE\",\n         \"weight\":1\n      }\n\
            \   ],\n   \"cluster\":\"FitnesseFargate\",\n   \"count\":1,\n   \"taskDefinition\"\
            :\"fitnesse-grabber:11\",\n   \"networkConfiguration\":{\n      \"awsvpcConfiguration\"\
            :{\n         \"assignPublicIp\":\"ENABLED\",\n         \"securityGroups\"\
            :[\n            $input.json('$.sg')\n         ],\n         \"subnets\"\
            :[\n            $input.json('$.subnet')\n         ]\n      }\n   },\n\
            \   \"overrides\":{\n      \"containerOverrides\":[\n         {\n    \
            \        \"command\":[\n               \"bash\",\n               \"./grab.sh\"\
            ,\n               $input.json('$.url'),\n               $input.json('$.dir')\n\
            \            ],\n            \"name\":\"fitnesse-grabber\"\n         }\n\
            \      ]\n   }\n}"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
    options:
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
components:
  schemas:
    Empty:
      title: "Empty Schema"
      type: "object"
